version: '3.8'

volumes:
  static:
  media:

services:
  # Postgresql Database
  database:
    image: postgres:15-alpine
    restart: unless-stopped
    container_name: postgresql
    env_file:
      - .env
    ports:
      - 5432:5432
    volumes:
      - ./database/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
      - /data/postgresql/:/var/lib/postgresql/data

  # Django app
  app:
    image: django
    container_name: django
    build: &app
      context: ../../
      dockerfile: ./docker/staging/app/Dockerfile
    env_file: &env
      - .env
    volumes:
      - static:${STATIC_ROOT}:rw
      - media:${MEDIA_ROOT}:rw
    depends_on:
      - database

  # Gunicorn WSGI server
  wsgi:
    image: gunicorn
    restart: unless-stopped
    container_name: gunicorn
    build: *app
    command: start-gunicorn-server.sh
    env_file: *env
    depends_on:
      - app
    ports:
      - 8000:8000

  # Daphne ASGI server
  asgi:
    image: daphne
    restart: unless-stopped
    container_name: daphne
    build: *app
    command: start-daphne-server.sh
    env_file: *env
    depends_on:
      - app
    ports:
      - 8001:8001

  # Nginx Reverse Proxy
  proxy:
    image: nginx:1.23-alpine
    restart: unless-stopped
    container_name: nginx
    command: nginx -g 'daemon off;'
    volumes:
      - ./proxy/default.conf:/etc/nginx/conf.d/default.conf
      - static:${STATIC_ROOT}:ro
      - media:${MEDIA_ROOT}:ro
    ports:
      - 80:80
    depends_on:
      - wsgi
      - asgi


  # Redis Broker
  broker:
    image: redis:7-alpine
    restart: unless-stopped
    container_name: redis
    ports:
      - 6379:6379
    depends_on:
      - database

  # Celery Worker
  worker:
    image: celery-worker
    restart: unless-stopped
    container_name: celery-worker
    build: *app
    command: start-celery-worker.sh
    env_file: *env
    depends_on:
      - database
      - broker
      - app